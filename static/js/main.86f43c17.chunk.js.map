{"version":3,"sources":["firebase/config.js","firebase/auth.js","firebase/user.js","pages/Layout/Footer.jsx","pages/Layout/Header.jsx","pages/Layout/index.jsx","firebase/subject.js","components/FormSubject.jsx","components/Menu.jsx","common/index.js","firebase/question.js","components/PlayGame/AnswerQuestion.jsx","components/PlayGame/index.jsx","components/Questions/index.jsx","components/Questions/FormQuestion.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getFirestore","logout","collection","a","signOut","Footer","className","Header","useState","loading","setLoading","handleLogout","setTimeout","console","log","to","onClick","Layout","children","subjectsCollectionRef","createSubject","data","addDoc","getSubjects","getDocs","docs","map","doc","id","FormSubject","subjectText","setSubjectText","onSubmit","e","preventDefault","title","placeholder","value","onChange","target","type","Menu","checkStt","stt","randomArray","numArr","numRan","arr","i","push","newArr","array","randomIndex","max","currentIndex","length","Math","floor","random","shuffle","slice","questionsCollectionRef","createQuestion","getQuestions","getRandomQuestions","num","subjects","queryRef","query","where","dataDocs","forEach","index","idx","findIndex","item","ListAnswer","listAnswer","dataAnswer","setDataAnswer","finished","chooseAnswer","setChooseAnswer","it","check","handleClick","text","AnswerQuestion","questions","setSteps","navigate","useNavigate","setFinished","score","setScore","handleReload","handleGoHome","questionText","answers","diem","PlayGame","setSubjects","chooseSubjects","setChooseSubjects","numberQuestions","setNumberQuestions","setQuestions","steps","handleSubmitSubjects","useEffect","unSub","includes","newChooseSubjects","splice","handleChooseSubjects","Questions","listQuestion","setListQuestion","indexStt","scope","subject","FormQuestionAnswer","setAnswers","correctAnswer","setCorrectAnswer","setText","txt","FormQuestion","setQuestionText","queSubject","setQueSubject","newAnswers","idxSubject","question","App","currentUser","setCurrentUser","onAuthStateChanged","user","useAuth","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86f43c17.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCG-DqrcfSVwAW5h_dLdPjKD98_aH7QQGc\",\n  authDomain: \"reddit-clone-bbf38.firebaseapp.com\",\n  projectId: \"reddit-clone-bbf38\",\n  storageBucket: \"reddit-clone-bbf38.appspot.com\",\n  messagingSenderId: \"639801013371\",\n  appId: \"1:639801013371:web:7c50c64402e3efc99a9ede\",\n  measurementId: \"G-J1DEVYG2YW\",\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const auth = getAuth(app);\n\nexport const db = getFirestore(app);\n","import {\n  createUserWithEmailAndPassword,\n  GoogleAuthProvider,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  signOut,\n} from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { auth } from \"./config\";\nimport { createUser } from \"./user\";\n\nexport const register = async ({ email, password }) => {\n  try {\n    const user = await createUserWithEmailAndPassword(auth, email, password);\n    console.log(user);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const login = async (email, password) => {\n  try {\n    const user = await signInWithEmailAndPassword(auth, email, password);\n    console.log(user);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const logout = async () => {\n  await signOut(auth);\n};\n\nexport const useAuth = () => {\n  const [currentUser, setCurrentUser] = useState({});\n\n  useEffect(() => {\n    const unSub = onAuthStateChanged(auth, (user) => setCurrentUser(user));\n\n    return unSub;\n  }, []);\n\n  return currentUser;\n};\n\nexport const googlePopup = async () => {\n  const googleProvider = new GoogleAuthProvider();\n  try {\n    const { _tokenResponse, user } = await signInWithPopup(\n      auth,\n      googleProvider\n    );\n    console.log({ _tokenResponse, user });\n    if (_tokenResponse?.isNewUser) {\n      await createUser({\n        ...user.providerData[0],\n        uid: user.uid,\n        displayName: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL,\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDocs,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { db } from \"./config\";\n\nconst usersCollectionRef = collection(db, \"users\");\n\nexport const createUser = async (data) => {\n  console.log({ data });\n  await addDoc(usersCollectionRef, data);\n};\n\nexport const updateUser = async (data) => {\n  const userDoc = doc(db, \"users\", data.id);\n  const newFields = { ...data };\n  await updateDoc(userDoc, newFields);\n};\n\nexport const deleteUser = async (data) => {\n  const userDoc = doc(db, \"users\", data.id);\n  await deleteDoc(userDoc);\n};\n\nexport const getUsers = async () => {\n  const data = await getDocs(usersCollectionRef);\n  return data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n};\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">2022 @Copyright by Nguyễn Đình Khôi</footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../../firebase/auth\";\n\nconst Header = () => {\n  const [loading, setLoading] = useState(false);\n  const handleLogout = async () => {\n    setLoading(true);\n    setTimeout(() => {}, 500);\n    try {\n      await logout();\n    } catch (error) {\n      console.log(error);\n    }\n    setLoading(false);\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <div className=\"header__left\">\n              <Link to=\"/\">Logo</Link>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"header__right\">\n              <button\n                onClick={handleLogout}\n                className={`btn ${loading && `btn-loading`}`}\n              >\n                Sign Out\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <main className=\"main\">{children}</main>\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n","import {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDoc,\n  getDocs,\n  updateDoc,\n} from \"firebase/firestore\";\nimport { db } from \"./config\";\n\nconst subjectsCollectionRef = collection(db, \"subjects\");\n\nexport const createSubject = async (data) => {\n  console.log({ data });\n  await addDoc(subjectsCollectionRef, data);\n};\n\nexport const updateSubject = async (data) => {\n  const subjectDoc = doc(db, \"subjects\", data.id);\n  const newFields = { ...data };\n  await updateDoc(subjectDoc, newFields);\n};\n\nexport const deleteSubject = async (data) => {\n  const subjectDoc = doc(db, \"subjects\", data.id);\n  await deleteDoc(subjectDoc);\n};\n\nexport const getSubjects = async () => {\n  const data = await getDocs(subjectsCollectionRef);\n  return data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n};\n\nexport const getSubject = async (subject_id) => {\n  const docRef = doc(db, \"subjects\", subject_id);\n\n  const docSnap = await getDoc(docRef);\n\n  const data = { ...docSnap.data(), id: subject_id };\n  return data;\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { createSubject } from \"../firebase/subject\";\n\nconst FormSubject = () => {\n  const [subjectText, setSubjectText] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (subjectText === \"\") return;\n\n    let data = {\n      title: subjectText,\n    };\n\n    createSubject(data);\n\n    setSubjectText(\"\");\n  };\n\n  return (\n    <div className=\"form-subject\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1>Add Subject</h1>\n          </div>\n          <div className=\"col-12\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"input-group form-question__answer\">\n                <div className=\"input-form\">\n                  <i className=\"fa-solid fa-s\"></i>\n                  <input\n                    className={`input icon-left`}\n                    placeholder=\"Subject...\"\n                    value={subjectText}\n                    onChange={(e) => setSubjectText(e.target.value)}\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn btn-green\">\n                  Add Subject\n                </button>\n              </div>\n            </form>\n          </div>\n          <div className=\"col-12\">\n            <Link to={\"/\"} className=\"btn btn-blue\">\n              Go back to Home\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormSubject;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Menu = () => {\n  return (\n    <div className=\"form-subject\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 mb-5\">\n            <Link to={\"/\"} className=\"btn\">\n              Abx\n            </Link>\n          </div>\n          <div className=\"col-12 mb-5\">\n            <Link to={\"/form-subject\"} className=\"btn\">\n              Form Subject\n            </Link>\n          </div>\n          <div className=\"col-12 mb-5\">\n            <Link to={\"/questions\"} className=\"btn\">\n              Questions\n            </Link>\n          </div>\n          <div className=\"col-12 mb-5\">\n            <Link to={\"/play-game\"} className=\"btn\">\n              Play game\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","export const checkStt = (stt) => {\n  switch (stt) {\n    case 0:\n      return \"a\";\n    case 1:\n      return \"b\";\n    case 2:\n      return \"c\";\n    case 3:\n      return \"d\";\n    default:\n      break;\n  }\n};\n\nexport const randomNumber = (max) => {\n  return Math.floor(Math.random() * max);\n};\n\nconst shuffle = (array) => {\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex !== 0) {\n    // Pick a remaining element.\n    randomIndex = randomNumber(currentIndex);\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex],\n      array[currentIndex],\n    ];\n  }\n\n  return array;\n};\n\nexport const randomArray = (numArr, numRan) => {\n  let arr = [];\n  for (let i = 0; i < numArr; i++) {\n    arr.push(i);\n  }\n\n  let newArr = shuffle(arr);\n\n  if (numRan >= numArr) return newArr;\n\n  return newArr.slice(0, numRan);\n};\n","import {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getDoc,\n  getDocs,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\nimport { randomArray } from \"../common\";\nimport { db } from \"./config\";\n\nconst questionsCollectionRef = collection(db, \"questions\");\n\nexport const createQuestion = async (data) => {\n  console.log({ data });\n  await addDoc(questionsCollectionRef, data);\n};\n\nexport const updateQuestion = async (data) => {\n  const questionDoc = doc(db, \"questions\", data.id);\n  const newFields = { ...data };\n  await updateDoc(questionDoc, newFields);\n};\n\nexport const deleteQuestion = async (data) => {\n  const questionDoc = doc(db, \"questions\", data.id);\n  await deleteDoc(questionDoc);\n};\n\nexport const getQuestions = async () => {\n  const data = await getDocs(questionsCollectionRef);\n  return data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n};\n\nexport const getQuestion = async (question_id) => {\n  const docRef = doc(db, \"subjects\", question_id);\n\n  const docSnap = await getDoc(docRef);\n\n  const data = { ...docSnap.data(), id: question_id };\n  return data;\n};\n\nexport const getRandomQuestions = async (num, subjects) => {\n  let dataDocs;\n  // const data = await getDocs(questionsCollectionRef);\n  // console.log(data.docs.length);\n\n  if (subjects.length > 0) {\n    const queryRef = query(\n      questionsCollectionRef,\n      where(\"subject.id\", \"in\", subjects)\n    );\n    dataDocs = await getDocs(queryRef);\n  } else {\n    dataDocs = await getDocs(questionsCollectionRef);\n  }\n  let arr = randomArray(dataDocs.docs.length, num);\n\n  console.log(arr);\n\n  dataDocs.docs.forEach((doc, index) => {\n    const idx = arr.findIndex((item) => item === index);\n    arr[idx] = {\n      ...doc.data(),\n      id: doc.id,\n    };\n  });\n\n  console.log(arr);\n\n  return arr;\n\n  // return data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n};\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst AnswerQuestion = ({ questions, setSteps }) => {\n  const navigate = useNavigate();\n  const [dataAnswer, setDataAnswer] = useState([]);\n  const [finished, setFinished] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleFinish = () => {\n    setLoading(true);\n    setTimeout(() => {\n      let diem = 0;\n      dataAnswer.forEach((item, index) => {\n        if (item.check) {\n          diem++;\n        }\n      });\n      setScore(diem);\n      setFinished(true);\n      setLoading(false);\n    }, 3000);\n  };\n\n  const handleReload = () => {\n    setLoading(false);\n    setFinished(false);\n    setDataAnswer([]);\n    setScore(0);\n    setSteps(0);\n  };\n\n  const handleGoHome = () => {\n    setLoading(false);\n    setFinished(false);\n    setDataAnswer([]);\n    setScore(0);\n    setSteps(0);\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"row mt-10\">\n      {loading && (\n        <div className=\"is-loading\">\n          <i className=\"fa-solid fa-sync fa-spin\"></i>\n        </div>\n      )}\n      {finished && (\n        <div className=\"col-12\">\n          <div className=\"card number-question mb-8\">\n            <div className=\"card-body\">\n              <h2 className=\"mb-1\">\n                You answered {score} / {questions.length} questions correctly\n              </h2>\n              <button className=\"btn btn-green mr-5\" onClick={handleReload}>\n                <i className=\"fa-solid fa-arrows-rotate\"></i>Rework, do it again\n              </button>\n              <button className=\"btn btn-blue\" onClick={handleGoHome}>\n                <i className=\"fa-solid fa-right-from-bracket\"></i>Go to Home\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {questions.map((item, index) => {\n        console.log(item);\n        return (\n          <div className=\"col-12 mb-8\" key={index}>\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <div className=\"card number-question\">\n                  <div className=\"card-body\">\n                    Question {index + 1}: {item.questionText}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ListAnswer\n              listAnswer={item.answers}\n              setDataAnswer={setDataAnswer}\n              dataAnswer={dataAnswer}\n              stt={index}\n              finished={finished}\n            />\n          </div>\n        );\n      })}\n      {!finished && (\n        <div className=\"col-12\">\n          <button className=\"btn btn-green\" onClick={handleFinish}>\n            Finish\n          </button>\n        </div>\n      )}\n      {finished && (\n        <div className=\"col-12\">\n          <div className=\"card number-question mb-8\">\n            <div className=\"card-body\">\n              <h2 className=\"mb-1\">\n                You answered {score} / {questions.length} questions correctly\n              </h2>\n              <button className=\"btn btn-green mr-5\" onClick={handleReload}>\n                <i className=\"fa-solid fa-arrows-rotate\"></i>Rework, do it again\n              </button>\n              <button className=\"btn btn-blue\" onClick={handleGoHome}>\n                <i className=\"fa-solid fa-right-from-bracket\"></i>Go to Home\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ListAnswer = ({\n  listAnswer,\n  dataAnswer,\n  setDataAnswer,\n  stt,\n  finished,\n}) => {\n  const [chooseAnswer, setChooseAnswer] = useState(false);\n\n  const handleClick = (item, stt, index) => {\n    dataAnswer[stt] = item;\n    setDataAnswer(dataAnswer);\n    setChooseAnswer(index);\n  };\n\n  console.log(finished);\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"row\">\n        {listAnswer.map((it, idx) => (\n          <div className=\"col-6 mt-8\" key={idx}>\n            <div\n              className={`card choose-answer ${\n                chooseAnswer === idx ? \"active\" : \"\"\n              } ${finished ? (it.check ? \"correct\" : \"wrong\") : \"\"}`}\n              onClick={() => handleClick(it, stt, idx)}\n            >\n              <div className=\"card-body\">{it.text}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AnswerQuestion;\n","import React, { useEffect, useState } from \"react\";\nimport { getRandomQuestions } from \"../../firebase/question\";\nimport { getSubjects } from \"../../firebase/subject\";\nimport AnswerQuestion from \"./AnswerQuestion\";\n\nconst PlayGame = () => {\n  const [subjects, setSubjects] = useState([]);\n  const [chooseSubjects, setChooseSubjects] = useState([]);\n  const [numberQuestions, setNumberQuestions] = useState(10);\n  const [questions, setQuestions] = useState([]);\n\n  const [steps, setSteps] = useState(0);\n\n  const handleChooseSubjects = (id) => {\n    let newChooseSubjects = [...chooseSubjects];\n    console.log(id);\n    const idx = newChooseSubjects.findIndex((item) => item === id);\n    if (idx > -1) {\n      newChooseSubjects.splice(idx, 1);\n    } else {\n      newChooseSubjects.push(id);\n    }\n    setChooseSubjects(newChooseSubjects);\n  };\n\n  const handleSubmitSubjects = async () => {\n    const data = await getRandomQuestions(10, chooseSubjects);\n    console.log(data);\n    setQuestions(data);\n    setSteps(1);\n  };\n\n  useEffect(() => {\n    const unSub = async () => {\n      const data = await getSubjects();\n      setSubjects(data);\n    };\n    return unSub();\n  }, []);\n\n  return (\n    <div className=\"play-game\">\n      <div className=\"container\">\n        {steps === 0 && (\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h2>Choose Subjects...</h2>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"row choose-subjects\">\n                {subjects.map((item, index) => (\n                  <div key={index} className=\"col-6 col-md-4 mb-6\">\n                    <div\n                      className={`item card ${\n                        chooseSubjects.includes(item.id) ? \"active\" : \"\"\n                      }`}\n                      onClick={() => handleChooseSubjects(item.id)}\n                    >\n                      <div className=\"card-body\">{item.title}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <h2>Choose Number Questions...</h2>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"row\">\n                <div className=\"col-4\"></div>\n                <div className=\"col-4\">\n                  <div className=\"input-form mb-15\">\n                    <input\n                      type=\"number\"\n                      className=\"input\"\n                      placeholder={`Number...`}\n                      value={numberQuestions}\n                      onChange={(e) => setNumberQuestions(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-4\"></div>\n              </div>\n            </div>\n            <div className=\"col-12\">\n              <button className=\"btn btn-blue\" onClick={handleSubmitSubjects}>\n                Submit subjects\n              </button>\n            </div>\n          </div>\n        )}\n\n        {steps === 1 && (\n          <AnswerQuestion questions={questions} setSteps={setSteps} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayGame;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getQuestions } from \"../../firebase/question\";\n\nconst Questions = () => {\n  const [listQuestion, setListQuestion] = useState([]);\n\n  let indexStt = 1;\n\n  useEffect(() => {\n    const unSub = async () => {\n      const data = await getQuestions();\n      setListQuestion(data);\n    };\n    return unSub();\n  }, []);\n\n  return (\n    <div className=\"questions\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-6\">\n            <h1>List Questions</h1>\n          </div>\n          <div className=\"col-6\">\n            <Link to={\"/form-question\"} className=\"btn btn-green mt-3\">\n              <i className=\"fa-solid fa-plus\"></i> Add More Question\n            </Link>\n          </div>\n          <div className=\"col-12\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Stt</th>\n                  <th scope=\"col\">Questions</th>\n                  <th scope=\"col\">Subject</th>\n                  <th scope=\"col\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {listQuestion.map((item, index) => (\n                  <tr key={index}>\n                    <th scope=\"row\">{indexStt++}</th>\n                    <td>{item.questionText}</td>\n                    <td>{item.subject.title}</td>\n                    <td>\n                      <button className=\"btn btn-yellow mr-5\">\n                        <i className=\"fa-solid fa-pen-to-square\"></i>\n                      </button>\n                      <button className=\"btn btn-red\">\n                        <i className=\"fa-solid fa-pen-to-square\"></i>\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Questions;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { checkStt } from \"../../common\";\nimport { createQuestion } from \"../../firebase/question\";\nimport { getSubjects } from \"../../firebase/subject\";\n\nconst FormQuestion = () => {\n  const navigate = useNavigate();\n  const [subjects, setSubjects] = useState([]);\n\n  const [questionText, setQuestionText] = useState(\"\");\n  const [correctAnswer, setCorrectAnswer] = useState(-1);\n  const [answers, setAnswers] = useState([\"\", \"\", \"\", \"\"]);\n  const [queSubject, setQueSubject] = useState(\"\");\n\n  useEffect(() => {\n    const unSub = async () => {\n      const data = await getSubjects();\n\n      setSubjects(data);\n    };\n\n    return unSub();\n  }, []);\n\n  useEffect(() => {\n    // const unSub = async () => {\n    //   const questionsRef = collection(db, \"questions\");\n    //   const q = query(\n    //     questionsRef,\n    //     // where(\"__name__\", \"in\", [\n    //     //   \"j4hkCc2Zc0xG579Xm9tc\",\n    //     //   \"HgSswbQRMW74DH3SLiJ4\",\n    //     // ])\n    //   );\n    //   const data = await getDocs(q);\n    //   data.forEach((doc) => {\n    //     console.log(doc.id, \"=> \", doc.data());\n    //   });\n    // };\n    // return unSub();\n  }, []);\n\n  const handleSubmit = () => {\n    let newAnswers = [];\n\n    if (queSubject === \"\") return;\n\n    if (correctAnswer < 0) return;\n\n    if (questionText === \"\") return;\n\n    answers.forEach((item, index) => {\n      newAnswers.push({\n        text: item,\n        check: correctAnswer === index ? true : false,\n      });\n    });\n\n    let idxSubject = subjects.findIndex((item) => item.id === queSubject);\n\n    let question = {\n      questionText,\n      answers: newAnswers,\n      subject: subjects[idxSubject],\n    };\n\n    createQuestion(question);\n    navigate(\"/questions\");\n  };\n\n  return (\n    <div className=\"form-question\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h1>Question</h1>\n          </div>\n          <div className=\"col-12 mb-8\">\n            <select\n              className=\"select\"\n              onChange={(e) => setQueSubject(e.target.value)}\n            >\n              <option value=\"\">-- Choose a Subject --</option>\n              {subjects.map((item, index) => (\n                <option value={item.id} key={index}>\n                  {item.title}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"col-12\">\n            <textarea\n              placeholder=\"Question...\"\n              className=\"textarea form-question__question\"\n              value={questionText}\n              onChange={(e) => setQuestionText(e.target.value)}\n            ></textarea>\n          </div>\n          {answers.map((item, index) => (\n            <FormQuestionAnswer\n              key={index}\n              item={item}\n              stt={index}\n              answers={answers}\n              setAnswers={setAnswers}\n              correctAnswer={correctAnswer}\n              setCorrectAnswer={setCorrectAnswer}\n            />\n          ))}\n          <div className=\"col-12 mb-5\">\n            <div className=\"form-question__submit\">\n              <button className=\"btn btn-green\" onClick={handleSubmit}>\n                Submit\n              </button>\n            </div>\n          </div>\n          <div className=\"col-12\">\n            <Link to={\"/questions\"} className=\"btn btn-blue\">\n              Go back to Home\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst FormQuestionAnswer = ({\n  item,\n  stt,\n  setAnswers,\n  answers,\n  correctAnswer,\n  setCorrectAnswer,\n}) => {\n  const [text, setText] = useState(\"\");\n\n  const handleChangeText = (txt) => {\n    setText(txt);\n    answers[stt] = txt;\n\n    setAnswers(answers);\n  };\n\n  const handleCheck = () => {\n    setCorrectAnswer(stt);\n  };\n\n  return (\n    <div className=\"col-12 col-md-6\">\n      <div className=\"input-group form-question__answer\">\n        <div className=\"input-form\">\n          <i className={`fa-solid fa-${checkStt(stt)}`}></i>\n          <input\n            className={`input icon-left ${\n              correctAnswer === stt ? \"input-green\" : \"\"\n            }`}\n            placeholder={`Answer ${checkStt(stt)}...`}\n            value={text}\n            onChange={(e) => handleChangeText(e.target.value)}\n          />\n        </div>\n        <button\n          onClick={() => handleCheck()}\n          className={`btn ${correctAnswer === stt ? \"btn-green\" : \"btn-red\"}`}\n        >\n          {correctAnswer === stt ? (\n            <i className=\"fa-solid fa-check\"></i>\n          ) : (\n            <i className=\"fa-solid fa-xmark\"></i>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormQuestion;\n","import \"./App.css\";\nimport { useAuth } from \"./firebase/auth\";\nimport { Layout, Login } from \"./pages\";\nimport \"./sass/styles.css\";\nimport { BrowserRouter, HashRouter, Route, Routes } from \"react-router-dom\";\nimport { FormSubject, Menu, PlayGame, Questions } from \"./components\";\nimport FormQuestion from \"./components/Questions/FormQuestion\";\n\nfunction App() {\n  // const [loading, setLoading] = useState(false);\n\n  // const [user, setUser] = useState({});\n\n  const currentUser = useAuth();\n\n  // onAuthStateChanged(auth, (currentUser) => {\n  //   setUser(currentUser);\n  // });\n\n  // const handleLogout = async () => {\n  //   setLoading(true);\n  //   setTimeout(() => {}, 500);\n  //   try {\n  //     await logout();\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  //   setLoading(false);\n  // };\n\n  return (\n    <div className=\"App\">\n      {/* <BrowserRouter> */}\n      <HashRouter>\n        {/* {!currentUser?.email ? (\n          <Login />\n        ) : ( */}\n        <Layout>\n          <Routes>\n            {/* <Route path=\"form-subject\">\n                <FormSubject />\n              </Route> */}\n            <Route path=\"/\" element={<Menu />} />\n            <Route path=\"/form-subject\" element={<FormSubject />} />\n            <Route path=\"/form-question\" element={<FormQuestion />} />\n            <Route path=\"/questions\" element={<Questions />} />\n            <Route path=\"/play-game\" element={<PlayGame />} />\n          </Routes>\n        </Layout>\n        {/* )} */}\n      </HashRouter>\n      {/* </BrowserRouter> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}